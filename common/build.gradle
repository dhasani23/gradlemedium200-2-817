/*
 * Common Module Build Configuration
 * 
 * This module contains shared utilities, common DTOs, constants, enums, and helper classes
 * used across all other modules in the gradlemedium200 application.
 */

plugins {
    id 'java-library'
    id 'org.springframework.boot' version '2.7.0' apply false
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.gradlemedium200'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

// With Spring Boot plugin applied with 'apply false', we don't need bootJar configuration
// as the task is not available

jar {
    enabled = true
    // Add manifest entries
    manifest {
        attributes(
                'Implementation-Title': 'gradlemedium200-common',
                'Implementation-Version': version,
                'Created-By': System.properties['java.version'] + ' (' + System.properties['java.vendor'] + ')',
                'Built-By': System.getProperty('user.name'),
                'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date())
        )
    }
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:2.7.0")
    }
}

repositories {
    mavenCentral()
    // Add any other repositories if needed
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    // Spring Boot dependencies
    api 'org.springframework.boot:spring-boot-starter'
    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.springframework.boot:spring-boot-starter-actuator'
    
    // AWS dependencies for SNS, SQS, and DynamoDB
    api 'com.amazonaws:aws-java-sdk-sns:1.12.261'
    api 'com.amazonaws:aws-java-sdk-sqs:1.12.261'
    api 'com.amazonaws:aws-java-sdk-dynamodb:1.12.261'
    
    // Jackson for JSON processing
    api 'com.fasterxml.jackson.core:jackson-databind'
    api 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // Logging
    api 'org.slf4j:slf4j-api'
    api 'ch.qos.logback:logback-classic'
    api 'ch.qos.logback:logback-core'
    api 'ch.qos.logback:logback-core:1.2.11:sources'
    
    // Common utilities
    api 'org.apache.commons:commons-lang3'
    api 'commons-io:commons-io:2.6'
    api 'com.google.guava:guava:25.1-jre'
    
    // AOP dependencies
    api 'org.aspectj:aspectjweaver'
    api 'org.aspectj:aspectjrt'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.hamcrest:hamcrest-library'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
}

// Configure test task
test {
    useJUnit()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

// Create Javadoc with links to JDK and Spring API documentation
javadoc {
    options {
        links "https://docs.oracle.com/javase/8/docs/api/"
        links "https://docs.spring.io/spring/docs/current/javadoc-api/"
    }
    options.addStringOption('Xdoclint:none', '-quiet')
}

// Task to create source jar
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

// Task to create javadoc jar
task javadocJar(type: Jar) {
    from javadoc.destinationDir
    archiveClassifier = 'javadoc'
    dependsOn javadoc
}

// Add sources jar and javadoc jar as artifacts
artifacts {
    archives sourcesJar
    archives javadocJar
}

// FIXME: Add checkstyle, PMD, and FindBugs plugins when CI pipeline is set up

// TODO: Configure code coverage reporting with JaCoCo